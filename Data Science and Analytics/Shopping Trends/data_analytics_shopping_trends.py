# -*- coding: utf-8 -*-
"""Data Analytics Shopping Trends.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eAJ1jWT4YTSf2wcpCyclxWQBcILDSBbW
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""---
#Shopping Trend Analysis
"""

df2=pd.read_csv('/content/shopping_trends.csv')
df2.head()

df2.info()

df2.describe()

df2['Age'].describe()

# Determine the range of ages and calculate the bin width
min_age = df2['Age'].min()
max_age = df2['Age'].max()
bin_width = int((max_age - min_age) / 10) + 1  # Assuming 10 bins

# Create bins with whole numbers and equal interval
bins = range(min_age, max_age + bin_width, bin_width)

# Create a histogram of ages
plt.figure(figsize=(15, 12))
counts, bins, _ = plt.hist(df2['Age'], bins=bins, color='skyblue', edgecolor='black', alpha=0.7, density=False)
plt.title('Distribution of Ages')
plt.xlabel('Age')
plt.ylabel('Frequency')

# Add text labels for each bin
for i in range(len(bins) - 1):
    bin_start = bins[i]
    bin_end = bins[i + 1] - 1 if i < len(bins) - 2 else max_age
    plt.text(bins[i] + (bins[i + 1] - bins[i]) / 2, counts[i], f"{int(counts[i])}\n[{bin_start}-{bin_end}]", ha='center', va='bottom')

plt.show()

df2['Location'].value_counts()

# Group the data by location and payment method
location_payment_group = df2.groupby(['Location', 'Payment Method']).size().reset_index(name='Frequency')

# Find the preferred payment method for each location
preferred_payment_by_location = location_payment_group.loc[location_payment_group.groupby('Location')['Frequency'].idxmax()]

# Display the results
print("Preferred payment method based on location:")
print(preferred_payment_by_location)

payment_counts = df2['Payment Method'].value_counts()
payment_counts

gender=df2['Gender'].value_counts()
gender

proportion_of_gender=gender/df2['Gender'].count()
proportion_of_gender

# Grouping the data by 'Item Purchased' and calculating the total number of purchases for each item
item_purchases = df2.groupby('Item Purchased').size().reset_index(name='Total Purchases')

# Sorting the items by total purchases in descending order
most_purchased_items = item_purchases.sort_values(by='Total Purchases', ascending=False)

# Displaying the top most purchased items
print("Most purchased items:")
print(most_purchased_items.head())

jewlery_prices=df2[df2["Item Purchased"]=="Jewelry"]["Purchase Amount (USD)"]
jewlery_prices.sum()

'''
# Filter the DataFrame to include only rows where the item is a scarf
scarf_prices = df2[df2['Item Purchased'] == 'Scarf']['Purchase Amount (USD)']

# Display the purchase prices for all scarfs
print("Purchase prices for all scarfs:")
print(scarf_prices)

'''

blouse_prices=df2[df2["Item Purchased"]=="Blouse"]["Purchase Amount (USD)"]
blouse_prices.sum()

pants_prices=df2[df2["Item Purchased"]=="Pants"]["Purchase Amount (USD)"]
pants_prices.sum()

shirt_prices=df2[df2["Item Purchased"]=="Shirt"]["Purchase Amount (USD)"]
shirt_prices.sum()

dress_prices=df2[df2["Item Purchased"]=="Dress"]["Purchase Amount (USD)"]
dress_prices.sum()

sum(df2["Purchase Amount (USD)"])

blouse_prices.sum()/233081

df2['Category'].value_counts()

preferred_payment=df2['Preferred Payment Method'].value_counts()
preferred_payment

correlation = df2['Age'].corr(df2['Purchase Amount (USD)'])
correlation

plt.figure(figsize=(8, 6))
sns.scatterplot(x='Age', y='Purchase Amount (USD)', data=df2)
plt.title('Scatter Plot of Age vs Purchase Amount')
plt.xlabel('Age')
plt.ylabel('Purchase Amount (USD)')
plt.show()

#The scatter plot shows

plt.figure(figsize=(10, 6))
sns.countplot(x='Category', hue='Gender', data=df2)
plt.title('Purchase Preferences by Gender')
plt.xlabel('Category')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.legend(title='Gender')
plt.show()

season_counts=df2['Season'].value_counts()
season_counts

# Counting the number of purchases based on gender and season
purchase_counts = df2.groupby(['Gender', 'Season']).size()

# Summing the purchase amounts based on gender and season
purchase_amounts = df2.groupby(['Gender', 'Season'])['Purchase Amount (USD)'].sum()

purchase_amounts

plt.figure(figsize=(10, 6))
sns.countplot(x='Category', hue='Gender', data=df2)
plt.title('Purchase Preferences by Gender')
plt.xlabel('Category')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.legend(title='Gender')
plt.show()

plt.figure(figsize=(10,6))
sns.countplot(x='Season', hue='Gender', data=df2)
plt.title('Purchased based on Season and Gender')
plt.xlabel('Season')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.legend(title='Gender')
plt.show()

category_revenue=df2.groupby('Category')['Purchase Amount (USD)'].sum()
category_revenue

average_category_purchase_amount=df2.groupby('Category')['Purchase Amount (USD)'].mean()
average_category_purchase_amount

seasonal_purchase=df2.groupby('Season')['Purchase Amount (USD)'].sum()
seasonal_purchase

plt.figure(figsize=(10,6))
seasonal_purchase.plot(kind='bar', color='blue')
plt.title("Seasonal Purchase")
plt.xlabel("Season")
plt.ylabel("Purchase Amount")
plt.xticks(rotation=0)
plt.show()

plt.figure(figsize=(10,6))
sns.countplot(x='Season', hue='Gender', data=df2)
plt.title('Purchased based on Season and Gender')
plt.xlabel('Season')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.legend(title='Gender')
plt.show()

yes_discount=df2[df2['Discount Applied']=='Yes']
len(yes_discount)
#len(df2)-len(no_discount)

no_discount=df2[df2['Discount Applied']=='No']
len(no_discount)

df2['Frequency of Purchases'].value_counts()



